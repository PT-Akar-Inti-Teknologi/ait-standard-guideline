package org.ait.project.guideline.example.modules.post.dto.request;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.IOException;
import java.nio.charset.Charset;

import org.ait.project.guideline.example.shared.JsonTester;
import org.json.JSONException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.skyscreamer.jsonassert.JSONAssert;
import org.skyscreamer.jsonassert.JSONCompareMode;

import com.fasterxml.jackson.databind.DatabindException;

@TestMethodOrder(OrderAnnotation.class)
public class PostReqJsonTest extends JsonTester<PostReq> {

	
	@BeforeEach
	@Override
	protected void setupTest() throws IOException {
		// the object to test is generated by EasyRandom
		setJsonTestType(JsonTestType.GENERATED); 
		// Java Type to test the JSON specs on
		setTypeToTest(PostReq.class);
		// must call super to check how valid the test is
		super.setupTest();
	}
	
	@Order(1)
	@Test
	public void serializationTest() throws JSONException, IOException {
		// serialize the object to test, into JSON
		String actual = om.writeValueAsString(getObjectToTest());
		
		// compare the expected JSON provided, against the JSON written by the ObjectMapper 
		JSONAssert.assertEquals(new String(getSourceJson().readAllBytes(), Charset.defaultCharset()), actual, JSONCompareMode.STRICT);
	}
	
	@Order(2)
	@Test
	public void deserializationTest() throws IOException, DatabindException {
		
		// deserialize/read the JSON into a POJO
		PostReq actual = om.readValue(getSourceJson(), getTypeToTest());
		
		// get the expected object 
		PostReq expected = getObjectToTest();
		
		assertEquals(expected.getBody(), actual.getBody());
		assertEquals(expected.getTitle(), actual.getTitle());
		assertEquals(expected.getUserId(), actual.getUserId());
	}
	
	
	
	

}
